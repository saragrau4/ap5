name:    ap5-data
outpath: ap5_dataloader
comment: MAELSTROM AP5 data loader benchmark jube script

parameterset:
  - name: appParameter
    parameter:
      - name: indir
        type: string
        tag: "(jwb|jwc|hdfml)+!cscratch"
        _: "${SCRATCH}/maelstrom/maelstrom_data/ap5_michael/preprocessed_tier2/monthly_files_copy/"
      - name: indir
        type: string
        tag: "e4nvidia|e4amd"
        _: "/data/maelstrom/langguth1/tier2/train/"
      - name: indir
        type: string
        tag: "(jwb|jwc|hdfml)+cscratch"
        _: "${CSCRATCH}/maelstrom/maelstrom_data/ap5_michael/preprocessed_tier2/monthly_files_copy/"
      - name: js_norm
        type: string
        tag: jwb|jwc|hdfml
        _: "/p/scratch/deepacf/maelstrom/maelstrom_data/ap5_michael/preprocessed_tier2/monthly_files_copy/zscore_norm.json"
      - name: js_norm
        type: string
        tag: "e4nvidia|e4amd"
        _: "/data/maelstrom/langguth1/tier2/train/zscore_norm.json"
      - name: file_pattern
        type: string
        _: "downscaling_tier2_train*"
      - name: nfiles_load
        type: int
        _: 33
      - name: nepochs
        type: int
        _: 10
      - name: var_tar2in
        type: string
        _: "hsurf_tar"
      - name: nworkers
        type: int
        tag: "!experimental"
        _: 10
      - name: nworkers
        type: int
        tag: "experimental"
        _: 33

  - name: globalParameter
    parameter:
      - name: modules
        tag: "jwb|jwc|hdfml"
        separator: "|"
        _:
          source $jube_benchmark_home/../env_setup/modules_jsc.sh
      - name: modules
        tag: "e4nvidia|e4amd"
        separator: "|"
        _:
          ml slurm
      - name: systemname
        tag: jwc
        _: jwc
      - name: systemname
        tag: jwb
        _: jwb
      - name: systemname
        tag: hdfml
        _: hdfml
      - name: systemname
        tag: e4nvidia
        _: e4nvidia
      - name: systemname
        tag: e4amd
        _: e4amd

  - name: executeset
    init_with: platform.xml
  - name: systemParameter
    init_with: platform.xml
    parameter:
      - name: preprocess
        mode: text
        tag: "jwb|jwc|hdfml"
        separator: |
        _:
          unset PYTHONPATH &&
          $modules &&
          source $jube_benchmark_home/../virtual_envs/venv_$systemname/bin/activate &&
          jutil env activate -p deepacf;
      - name: preprocess
        mode: text
        tag: "e4nvidia|e4amd"
        separator: |
        _:
          $modules;
          source /opt/share/users/maelstrom/venv-rocm/bin/activate
      - name: SRUN_CPUS_PER_TASK
        export: true
        _: ${SLURM_CPUS_PER_TASK}
      - name: HDF5_USE_FILE_LOCKING
        export: true
        tag: cscratch
        _: "FALSE"
      - name: PYTHONPATH
        export: true
        tag: "e4nvidia|e4amd"
        _: $jube_benchmark_home/../handle_data/:$jube_benchmark_home/../models:$jube_benchmark_home/../utils:$jube_benchmark_home/../postprocess:$${PYTHONPATH}
      - name: threadspertask
        _: 40
      - name: nodes
        _: 1
      - name: n_gpu
        _: 1
      - name: taskspernode
        _: $n_gpu
      - name: timelimit
        _: "02:00:00"
      - name: account
        tag: "jwb|jwc|hdfml"
        _: deepacf
      - name: account
        tag: "e4nvidia|e4amd"
        _: maelstrom
      - name: queue
        tag: "jwb+!test"
        _: booster
      - name: queue
        tag: "jwb+test"
        _: develbooster
      - name: queue
        tag: "jwc+!test"
        _: gpus
      - name: queue
        tag: "jwc+test"
        _: develgpus
      - name: queue
        tag: hdfml
        _: batch
      - name: queue
        tag: e4nvidia
        _: i-gpu-a100
      - name: queue
        tag: e4amd
        _: a-gpu-mi100
      - name: gres
        _: gpu:$n_gpu
      - name: additional_job_config
        tag: "e4nvidia|e4amd"
        _: "#SBATCH --mem=128Gb"
      - name: executable
        _: python -u $jube_benchmark_home/../test_scripts/demo_tfdataset_ap5.py
      - name: args_exec
        mode: text
        _: >
          -d ${indir}
          -f ${file_pattern}
          -n ${nfiles_load}
          -ne ${nepochs}
          -js_norm ${js_norm}
          -tar2in ${var_tar2in}
          -nw ${nworkers}

patternset:
   - name: perf_patterns
     pattern:
      - {name: dataset_size, type: float, _: "dataset with size:\\s+$jube_pat_fp"}
      - {name: data_proc_size, type: float, _: "data size:\\s+$jube_pat_fp"}
      - {name: elapsed_time, type: float, _: "processing time:\\s+$jube_pat_fp"}
      - {name: data_throughput, type: float, _: "throughput:\\s+$jube_pat_fp"}
      - {name: data_loading, type: float, _: "reading time:\\s+$jube_pat_fp"}
      - {name: cpu_mem, type: float, _: "Final CPU memory:.*peak: $jube_pat_fp GB"}
      - {name: gpu_mem, type: float, _: "Final GPU memory:.*peak: $jube_pat_fp GB"}

analyser:
    name: analyse
    reduce: false
    use: perf_patterns
    analyse:
        step: submit
        file:
          - job.out
          - stdout

result:
    use: analyse
    table:
      name: result
      style: pretty
      sort: iter_pat
      column:
        - {title: "JobID", _: jobid}
        - {title: "Job_Time", _: timelimit}
        - {title: "# nodes", _: nodes}
        - {title: "# gpu", _: n_gpu}
        - {title: "# epoch", _: nepochs}
        - {title: "raw dataset size [GB]", _: dataset_size}
        - {title: "processed data [GB]", _: data_proc_size}
        - {title: "elapsed time [s]", _: elapsed_time}
        - {title: "average throughput [MB/s]", _: data_throughput}
        - {title: "avg. ds load time [s]", _: data_loading_avg}
        - {title: "min. ds load time [s]", _: data_loading_min}
        - {title: "max. ds load time [s]", _: data_loading_max}
        - {title: "max. CPU memory [GB]", _: cpu_mem}
        - {title: "max. GPU memory [GB]", _: gpu_mem}

step:
  - name:   setup_venv
    use:
      - globalParameter
      - systemParameter
    do:
      _:
        unset PYTHONPATH;
        $modules;
        cd $jube_benchmark_home/../env_setup/ &&
        source ./setup_env_jube.sh venv_$systemname
  - name:   submit
    use:
      - appParameter
      - globalParameter
      - systemParameter
      - executeset
      - from: platform.xml
        _: jobfiles
      - from: platform.xml
        _: executesub
    do:
      done_file: $ready_file
      error_file: $error_file
      _:
        $modules;
        $submit $submit_script

